{"version":3,"file":"component---src-templates-category-template-js-cbd6e323fb7b2b71d59f.js","mappings":"uNAYA,MATA,SAA2BA,GAAuB,IAAtB,MAAEC,EAAK,SAAEC,GAAUF,EAC7C,OACEG,EAAAA,cAAA,OAAKC,UAAU,gCACbD,EAAAA,cAAA,OAAKC,UAAU,uBAAuBH,GACtCE,EAAAA,cAAA,OAAKC,UAAU,0BAA0BF,GAG/C,E,UCuCA,MAxCA,SAAyBF,GAAmB,IAAlB,YAAEK,GAAaL,EACvC,MAAM,MAAEM,EAAK,gBAAEC,GAAoBF,GAC7B,WAAEG,GAAeH,EACjBI,GAAkBC,EAAAA,EAAAA,UACtB,IAAMF,EAAWG,WAAWC,GAAaA,IAAaL,KACtD,CAACC,EAAYD,IAETM,EAAQP,EAAMQ,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAK,IAAIE,EAAAA,EAAKD,EAAK,KAG9C,EAACE,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAASX,IAGzCY,EAAAA,EAAAA,YAAU,KACRF,EAAYV,EAAgB,GAC3B,CAACA,IAEJ,MAAMa,GAAmBC,EAAAA,EAAAA,cACvB,CAACC,EAAGC,KAEFN,EAAYM,GAGZC,YAAW,KACT,GAAc,IAAVD,EAAa,OAAOE,EAAAA,EAAAA,UAAS,WACjCA,EAAAA,EAAAA,UAAS,UAAUnB,EAAWiB,KAAS,GACtC,EAAE,GAEP,CAACjB,IAGH,OACEL,EAAAA,cAACyB,EAAAA,EAAM,KACLzB,EAAAA,cAAC0B,EAAAA,EAAG,CAAC5B,MAAM,UACXE,EAAAA,cAAC2B,EAAkB,CAAC7B,MAAOO,EAAWC,GAAkBP,SAAU,GAAGW,EAAMkB,iBAC3E5B,EAAAA,cAAC6B,EAAAA,EAAQ,CAACd,SAAUA,EAAUe,SAAUX,EAAkBY,KAAM1B,EAAYK,MAAOA,IAGzF,C","sources":["webpack://zoomkoding.com/./src/components/category-page-header/index.js","webpack://zoomkoding.com/./src/templates/category-template.js"],"sourcesContent":["import React from 'react';\nimport './style.scss';\n\nfunction CategoryPageHeader({ title, subtitle }) {\n  return (\n    <div className=\"category-page-header-wrapper\">\n      <div className=\"category-page-title\">{title}</div>\n      <div className=\"category-page-subtitle\">{subtitle}</div>\n    </div>\n  );\n}\n\nexport default CategoryPageHeader;\n","import React, { useMemo, useCallback, useState, useEffect } from 'react';\nimport { navigate } from 'gatsby';\n\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Post from '../models/post';\nimport CategoryPageHeader from '../components/category-page-header';\nimport PostTabs from '../components/post-tabs';\n\nfunction CategoryTemplate({ pageContext }) {\n  const { edges, currentCategory } = pageContext;\n  const { categories } = pageContext;\n  const currentTabIndex = useMemo(\n    () => categories.findIndex((category) => category === currentCategory),\n    [categories, currentCategory],\n  );\n  const posts = edges.map(({ node }) => new Post(node));\n\n  // 내부 상태로 탭 인덱스 관리\n  const [tabIndex, setTabIndex] = useState(currentTabIndex);\n\n  // currentCategory가 변경되면 탭 인덱스 동기화\n  useEffect(() => {\n    setTabIndex(currentTabIndex);\n  }, [currentTabIndex]);\n\n  const onTabIndexChange = useCallback(\n    (e, value) => {\n      // 먼저 상태 업데이트\n      setTabIndex(value);\n\n      // 그 다음 navigate\n      setTimeout(() => {\n        if (value === 0) return navigate(`/posts`);\n        navigate(`/posts/${categories[value]}`);\n      }, 0);\n    },\n    [categories],\n  );\n\n  return (\n    <Layout>\n      <Seo title=\"Posts\" />\n      <CategoryPageHeader title={categories[currentTabIndex]} subtitle={`${posts.length} posts`} />\n      <PostTabs tabIndex={tabIndex} onChange={onTabIndexChange} tabs={categories} posts={posts} />\n    </Layout>\n  );\n}\n\nexport default CategoryTemplate;\n"],"names":["_ref","title","subtitle","React","className","pageContext","edges","currentCategory","categories","currentTabIndex","useMemo","findIndex","category","posts","map","_ref2","node","Post","tabIndex","setTabIndex","useState","useEffect","onTabIndexChange","useCallback","e","value","setTimeout","navigate","Layout","Seo","CategoryPageHeader","length","PostTabs","onChange","tabs"],"sourceRoot":""}
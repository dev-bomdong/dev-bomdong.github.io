{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/#Babel/","result":{"pageContext":{"currentCategory":"#Babel","categories":["All","#AI","#자동화","#회고","#softSkill","#React","#디자인패턴","#Web","#Git","#Next.js","#Algorithm","#Javascript","#programming","#font","#CSS","#conference","Etc","#Babel"],"edges":[{"node":{"id":"93275a47-f6b9-5353-a398-885a12858811","excerpt":"들어가며 회사에서 소속팀이 변경되어 지금까지 봐오던 코드와 다른 코드를 보게 되었다. 그러다 눈에 띈 상단의 경로들.\n대부분의 경로가 보다 짤막하고  의 형태로 이루어져있었다.\n팀원분께 여쭈어보니 별칭 경로라는 걸 알게되었고, 보다 편리하게 개발할 수 있는 수단이라 생각되어 조금 더 배워보고 정리해본다. 별칭 경로를 사용하는 이유 Javascript/Typescript 환경에서 import 구문을 사용할 땐 보통 상대 경로를 사용한다.\n이 때 각 모듈의 디렉토리 depth가 깊어진다면, 아래와 같이 보기만 해도 아찔한 경로를 사용해야한다. 이런 경우 아래와 같은 몇 가지 문제점이 존재한다. 정확히 어느 경로에 있는 모듈인지 한 눈에 파악하기가 어렵다. 경로를 작성할 때 오류가 날 가능성이 크다. 문제 해결을 위해선 경로를 알아보기 쉽게 + 깔끔하게 정리해주는 절대 경로를 활용할 수 있다.\n여기서 더 나아가 절대 경로를 활용해 특정 디렉토리 경로에 별칭을 달아주는 별칭 경로를 활용한…","fields":{"slug":"/module-resolver/"},"frontmatter":{"categories":"#Babel","title":"Babel을 활용해 별칭 경로 설정하기","date":"May 22, 2022"}},"next":{"fields":{"slug":"/react-portal/"}},"previous":{"fields":{"slug":"/git-commitizen/"}}}]}},"staticQueryHashes":["1073350324","2009502679","2938748437"],"slicesMap":{}}
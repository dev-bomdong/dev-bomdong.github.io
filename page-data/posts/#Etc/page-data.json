{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/#Etc/","result":{"pageContext":{"currentCategory":"#Etc","categories":["All","#AI","#자동화","#회고","#Etc","#React","#DesignPattern","#Web","#Git","#Next.js","#Javascript","#Book"],"edges":[{"node":{"id":"fd00f341-ccb8-56b0-beea-2e46be0923e3","excerpt":"들어가며 2023년 인프콘에 참석했을 때 진유림님의 팀플레이어 101: 팀의 성공을 위해 달리는 메이커 되기 세션을 들었었다. 세션은 청중에게 팀플레이어가 되기 위한 몇가지 액션 아이템을 제안하는 것으로 마무리 되었는데, 내게는 그 중 하나인 동료들의 멋진 행동을 모아보고 나의 액션 아이템으로 만들기가 기억에 남았다. 그렇게 1년 정도가 지났고, 돌이켜보니 나도 모르게 동료분들의 멋진 행동을 남몰래 머릿속에 저장하고 나름대로 따라하고 있더라. 동료의 멋진 행동들을 동료평가의 긍정적인 피드백으로 적어낸 적은 있지만 내게 어떤 영향을 미쳤는지, 내 공간에 기록해 본 적은 없는 것 같아 적어보는 글. 딱 1년이 지났으니 정리하기 좋은 시점이다! 지시 대명사 줄이기 - 스쿼드 기획자님으로부터 개인적으로 업무적인 커뮤니케이션에선 ‘알잘딱깔센’으로 두루뭉술한 내용도 센스있게 알아듣는 것보단, 최대한 정확한 전달이 필요하다고 생각하는 편이다. 그 중 하나로, 대화 참여자들이 모두 같은 화면을 …","fields":{"slug":"/journal-action-item/"},"frontmatter":{"categories":"#Etc","title":"동료들의 멋진 행동에서 나의 액션 아이템 찾기","date":"September 01, 2024"}},"next":{"fields":{"slug":"/react-useEffect/"}},"previous":{"fields":{"slug":"/journal-futureconf-meetup/"}}},{"node":{"id":"7cc3ac84-8762-54ba-beed-faecc3fcf269","excerpt":"vscode에서 인텔리제이를 사용하게된지 어언 한달 반..\n단축키에 익숙하지않아 뚝딱거리는 날 더이상 마주하고 싶지 않아 적어보는 단축키 모음집.\n아래의 Mac symbol을 사용했다. symbol 의미 ⌘ command ⌥ option ⇧ shift ⏎ Enter 검색 동작 단축키 비고 전체 파일에서 검색 ⌘ + ⇧ + f 특정 함수나 변수 등을 찾을 때 유용하다. 라인 검색 ⌘ + i 특정 파일에서 에러가 났을 때, 그 라인을 찾는데 유용하다. 최근 본 파일 검색 ⌘ + e  파일명으로 검색 ⌘ + ⇧ + o 특정 파일을 찾을 때 사용한다. 전체에서 검색 ⇧ + ⇧ 검색 범위가 너무 광범위해서 오히려 불편할 수도 있다. 도구창 열기 동작 단축키 비고 Project 열기 ⌘ + 1 프로젝트 디렉토리 확인 Commit 열기 ⌘ + 0 Changes 확인 및 commit 작성 Git 열기 ⌘ + 9 Git log / Console 확인 Bookmark 열기 ⌘ + 2 본인이 표시해두…","fields":{"slug":"/etc-intellij-hotkey/"},"frontmatter":{"categories":"#Etc","title":"내가 보려고 쓰는 인텔리제이(IntelliJ) 단축키 for Mac","date":"October 02, 2022"}},"next":{"fields":{"slug":"/journal-the-first-half-2022/"}},"previous":{"fields":{"slug":"/journal-algorithm/"}}},{"node":{"id":"93275a47-f6b9-5353-a398-885a12858811","excerpt":"들어가며 회사에서 소속팀이 변경되어 지금까지 봐오던 코드와 다른 코드를 보게 되었다. 그러다 눈에 띈 상단의 경로들.\n대부분의 경로가 보다 짤막하고  의 형태로 이루어져있었다.\n팀원분께 여쭈어보니 별칭 경로라는 걸 알게되었고, 보다 편리하게 개발할 수 있는 수단이라 생각되어 조금 더 배워보고 정리해본다. 별칭 경로를 사용하는 이유 Javascript/Typescript 환경에서 import 구문을 사용할 땐 보통 상대 경로를 사용한다.\n이 때 각 모듈의 디렉토리 depth가 깊어진다면, 아래와 같이 보기만 해도 아찔한 경로를 사용해야한다. 이런 경우 아래와 같은 몇 가지 문제점이 존재한다. 정확히 어느 경로에 있는 모듈인지 한 눈에 파악하기가 어렵다. 경로를 작성할 때 오류가 날 가능성이 크다. 문제 해결을 위해선 경로를 알아보기 쉽게 + 깔끔하게 정리해주는 절대 경로를 활용할 수 있다.\n여기서 더 나아가 절대 경로를 활용해 특정 디렉토리 경로에 별칭을 달아주는 별칭 경로를 활용한…","fields":{"slug":"/module-resolver/"},"frontmatter":{"categories":"#Etc","title":"Babel을 활용해 별칭 경로 설정하기","date":"May 22, 2022"}},"next":{"fields":{"slug":"/react-portal/"}},"previous":{"fields":{"slug":"/git-commitizen/"}}}]}},"staticQueryHashes":["1073350324","2009502679","2938748437"],"slicesMap":{}}